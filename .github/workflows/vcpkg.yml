name: vcpkg

on:
  #schedule:
    # schedule build every night
  #  - cron: "0/6 * * * *"
  workflow_dispatch:

env:
  RUST_VERSION: "1.75" # https://github.com/rustdesk/rustdesk/discussions/7503
  CARGO_NDK_VERSION: "3.1.2"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.22.2"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "nightly"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2024.06.15
  VCPKG_COMMIT_ID: "f7423ee180c4b7f40d43402c2feb3859161ef625"
  VERSION: "1.3.3"
  NDK_VERSION: "r26d"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  # To make a custom build with your own servers set the below secret values
  RS_PUB_KEY: "${{ secrets.RS_PUB_KEY }}"
  RENDEZVOUS_SERVER: "${{ secrets.RENDEZVOUS_SERVER }}"
  API_SERVER: "${{ secrets.API_SERVER }}"
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"

jobs:

  build-rustdesk-android:
    if: true
    name: build rustdesk android apk ${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              arch: aarch64,
              target: aarch64-linux-android,
              os: ubuntu-20.04,
              openssl-arch: android-arm64,
              ref: master, # latest
            }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.job.ref }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
               clang \
               cmake \
               curl \
               gcc-multilib \
               git \
               g++ \
               g++-multilib \
               libayatana-appindicator3-dev\
               libasound2-dev \
               libc6-dev \
               libclang-10-dev \
               libgstreamer1.0-dev \
               libgstreamer-plugins-base1.0-dev \
               libgtk-3-dev \
               libpam0g-dev \
               libpulse-dev \
               libva-dev \
               libvdpau-dev \
               libxcb-randr0-dev \
               libxcb-shape0-dev \
               libxcb-xfixes0-dev \
               libxdo-dev \
               libxfixes-dev \
               llvm-10-dev \
               nasm \
               yasm \
               ninja-build \
               openjdk-11-jdk-headless \
               pkg-config \
               tree \
               wget

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
         ndk-version: ${{ env.NDK_VERSION }}
         add-to-path: true
       
      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
            vcpkgDirectory: /opt/artifacts/vcpkg
            vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
            doNotCache: false

      - name: Install vcpkg dependencies
        run: |
            case ${{ matrix.job.target }} in
            aarch64-linux-android)
                ANDROID_TARGET=arm64-v8a
            ;;
            armv7-linux-androideabi)
                ANDROID_TARGET=armeabi-v7a
            ;;
            x86_64-linux-android)
                ANDROID_TARGET=x86_64
            ;;
            i686-linux-android)
                ANDROID_TARGET=x86
            ;;
            esac
            if ! ./flutter/build_android_deps.sh "${ANDROID_TARGET}"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
                echo "$_1:"
                echo "======"
                cat "$_1"
                echo "======"
                echo ""
            done
            exit 1
            fi
        shell: bash

      - name: Create vcpkg Archive
        uses: thedoctor0/zip-release@0.7.1
        with:
            type: 'zip'
            filename: arm64-android.zip
            path: /opt/artifacts/vcpkg/installed/arm64-android

      - name: Upload vcpkg Archive
        uses: softprops/action-gh-release@v1
        with:
            prerelease: true
            tag_name: ${{ env.TAG_NAME }}
            files: | 
             arm64-android.zip
       
